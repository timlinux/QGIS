/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/project/qgsprojectelevationproperties.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/




class QgsProjectElevationProperties : QObject
{
%Docstring(signature="appended")
Contains elevation properties for a :py:class:`QgsProject`.

.. versionadded:: 3.26
%End

%TypeHeaderCode
#include "qgsprojectelevationproperties.h"
%End
  public:

    QgsProjectElevationProperties( QObject *parent /TransferThis/ = 0 );
%Docstring
Constructor for QgsProjectElevationProperties with the specified ``parent`` object.
%End

    ~QgsProjectElevationProperties();

    void reset();
%Docstring
Resets the properties to a default state.
%End

    void resolveReferences( const QgsProject *project );
%Docstring
Resolves reference to layers from stored layer ID.
%End

    bool readXml( const QDomElement &element, const QgsReadWriteContext &context );
%Docstring
Reads the property state from a DOM ``element``.

.. seealso:: :py:func:`writeXml`
%End

    QDomElement writeXml( QDomDocument &document, const QgsReadWriteContext &context ) const;
%Docstring
Returns a DOM element representing the properties.

.. seealso:: :py:func:`readXml`
%End

    QgsAbstractTerrainProvider *terrainProvider();
%Docstring
Returns the project's terrain provider.

.. seealso:: :py:func:`setTerrainProvider`
%End

    void setTerrainProvider( QgsAbstractTerrainProvider *provider /Transfer/ );
%Docstring
Sets the project's terrain ``provider``.

Ownership of ``provider`` is transferred to this object.

.. seealso:: :py:func:`terrainProvider`
%End

    QgsDoubleRange elevationRange() const;
%Docstring
Returns the project's elevation range, which indicates the upper and lower
elevation limits associated with the project.

.. note::

   This is a manual, use-set property, and does not necessarily
   coincide with the elevation ranges for individual layers in the project.

.. seealso:: :py:func:`setElevationRange`

.. seealso:: :py:func:`elevationRangeChanged`


.. versionadded:: 3.38
%End

  public slots:

    void setElevationRange( const QgsDoubleRange &range );
%Docstring
Sets the project's elevation ``range``, which indicates the upper and lower
elevation limits associated with the project.

.. note::

   This is a manual, use-set property, and does not necessarily
   coincide with the elevation ranges for individual layers in the project.

.. seealso:: :py:func:`elevationRange`

.. seealso:: :py:func:`elevationRangeChanged`


.. versionadded:: 3.38
%End

  signals:

    void changed();
%Docstring
Emitted when the elevation properties change.
%End

    void elevationRangeChanged( const QgsDoubleRange &range );
%Docstring
Emitted when the project's elevation ``is`` changed.

.. note::

   This is a manual, use-set property, and does not necessarily
   coincide with the elevation ranges for individual layers in the project.

.. seealso:: :py:func:`elevationRange`

.. seealso:: :py:func:`setElevationRange`


.. versionadded:: 3.38
%End

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/project/qgsprojectelevationproperties.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
